<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Modern Blog Platform</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    body {
      background: linear-gradient(to right, #1a202c, #2d3748);
      color: #e2e8f0;
    }
    .post-card {
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    .post-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
    }
    .modal {
      transition: opacity 0.3s ease;
    }
    .modal-content {
      animation: slideIn 0.3s ease;
    }
    @keyframes slideIn {
      from {
        transform: translateY(-20px);
        opacity: 0;
      }
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }
    .tag {
      transition: background-color 0.2s ease;
    }
    .tag:hover {
      background-color: #4a5568;
    }
  </style>
</head>
<body class="min-h-screen flex">

  <!-- Sidebar -->
  <aside class="w-64 bg-gray-900 p-6 fixed h-full">
    <h1 class="text-3xl font-bold text-white mb-8">Blog Haven</h1>
    <nav class="space-y-4">
      <button class="w-full text-left text-gray-300 hover:text-white hover:bg-gray-800 px-4 py-2 rounded-lg" onclick="showPosts()">All Posts</button>
      <button class="w-full text-left text-gray-300 hover:text-white hover:bg-gray-800 px-4 py-2 rounded-lg" onclick="openPostModal(null)">New Post</button>
      <div class="mt-4">
        <h3 class="text-sm font-semibold text-gray-400 mb-2">Tags</h3>
        <div id="tagsContainer" class="flex flex-wrap gap-2"></div>
      </div>
    </nav>
  </aside>

  <!-- Main Content -->
  <main class="ml-64 flex-1 p-8">
    <div class="mb-6">
      <input id="searchInput" type="text" placeholder="Search posts by title or tag..."
        class="w-full p-3 bg-gray-800 text-white border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500"
        oninput="filterPosts()" />
    </div>
    <div id="postsContainer" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"></div>
  </main>

  <!-- Modal -->
  <div id="postModal" class="modal fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center">
    <div class="modal-content bg-gray-800 p-6 rounded-lg w-full max-w-md">
      <h2 id="modalTitle" class="text-2xl font-semibold text-white mb-4">New Post</h2>
      <input id="postTitle" type="text" placeholder="Post Title"
        class="w-full p-3 mb-4 bg-gray-700 text-white border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" required />
      <textarea id="postContent" placeholder="Post Content" rows="5"
        class="w-full p-3 mb-4 bg-gray-700 text-white border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" required></textarea>
      <input id="postTags" type="text" placeholder="Tags (comma-separated)"
        class="w-full p-3 mb-4 bg-gray-700 text-white border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" />
      <div class="flex justify-end space-x-4">
        <button onclick="closePostModal()" class="px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-500">Cancel</button>
        <button onclick="savePost()" class="px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-500">Save</button>
      </div>
    </div>
  </div>

  <!-- JavaScript -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      loadPosts();
      loadTags();
    });

    function openPostModal(postId) {
      const modal = document.getElementById('postModal');
      const titleInput = document.getElementById('postTitle');
      const contentInput = document.getElementById('postContent');
      const tagsInput = document.getElementById('postTags');
      const modalTitle = document.getElementById('modalTitle');

      if (postId) {
        const posts = JSON.parse(localStorage.getItem('posts')) || [];
        const post = posts.find(p => p.id == postId);
        if (post) {
          titleInput.value = post.title;
          contentInput.value = post.content;
          tagsInput.value = post.tags.join(', ');
          modalTitle.textContent = 'Edit Post';
          modal.dataset.postId = postId;
        }
      } else {
        titleInput.value = '';
        contentInput.value = '';
        tagsInput.value = '';
        modalTitle.textContent = 'New Post';
        delete modal.dataset.postId;
      }
      modal.classList.remove('hidden');
    }

    function closePostModal() {
      document.getElementById('postModal').classList.add('hidden');
    }

    function savePost() {
      const title = document.getElementById('postTitle').value.trim();
      const content = document.getElementById('postContent').value.trim();
      const tags = document.getElementById('postTags').value.split(',').map(tag => tag.trim()).filter(Boolean);

      if (!title || !content) {
        alert('Please fill in title and content.');
        return;
      }

      const post = {
        id: document.getElementById('postModal').dataset.postId || Date.now(),
        title,
        content,
        tags,
        date: new Date().toLocaleString()
      };

      let posts = JSON.parse(localStorage.getItem('posts')) || [];

      if (document.getElementById('postModal').dataset.postId) {
        posts = posts.filter(p => p.id != post.id);
      }

      posts.push(post);
      localStorage.setItem('posts', JSON.stringify(posts));
      closePostModal();
      loadPosts();
      loadTags();
    }

    function loadPosts(filter = '') {
      const postsContainer = document.getElementById('postsContainer');
      postsContainer.innerHTML = '';
      const posts = JSON.parse(localStorage.getItem('posts')) || [];

      posts.sort((a, b) => b.id - a.id);

      posts.forEach(post => {
        if (
          filter &&
          !post.title.toLowerCase().includes(filter.toLowerCase()) &&
          !post.tags.some(tag => tag.toLowerCase().includes(filter.toLowerCase()))
        ) return;

        const postElement = document.createElement('div');
        postElement.className = 'post-card bg-gray-800 p-6 rounded-lg';
        postElement.innerHTML = `
          <h3 class="text-xl font-semibold text-white mb-2">${post.title}</h3>
          <p class="text-gray-300 mb-4">${post.content.substring(0, 100)}${post.content.length > 100 ? '...' : ''}</p>
          <div class="flex flex-wrap gap-2 mb-4">
            ${post.tags.map(tag => `<span class="tag bg-gray-700 text-gray-200 px-2 py-1 rounded text-sm cursor-pointer" onclick="filterByTag('${tag}')">${tag}</span>`).join('')}
          </div>
          <div class="flex justify-between items-center">
            <small class="text-gray-400">${post.date}</small>
            <div>
              <button onclick="openPostModal(${post.id})" class="text-indigo-400 hover:text-indigo-300 mr-4">Edit</button>
              <button onclick="deletePost(${post.id})" class="text-red-400 hover:text-red-300">Delete</button>
            </div>
          </div>
        `;
        postsContainer.appendChild(postElement);
      });
    }

    function loadTags() {
      const tagsContainer = document.getElementById('tagsContainer');
      tagsContainer.innerHTML = '';
      const posts = JSON.parse(localStorage.getItem('posts')) || [];
      const uniqueTags = [...new Set(posts.flatMap(post => post.tags))];

      uniqueTags.forEach(tag => {
        const tagElement = document.createElement('span');
        tagElement.className = 'tag bg-gray-700 text-gray-200 px-2 py-1 rounded text-sm cursor-pointer';
        tagElement.textContent = tag;
        tagElement.onclick = () => filterByTag(tag);
        tagsContainer.appendChild(tagElement);
      });
    }

    function filterPosts() {
      const filter = document.getElementById('searchInput').value.trim();
      loadPosts(filter);
    }

    function filterByTag(tag) {
      document.getElementById('searchInput').value = tag;
      loadPosts(tag);
    }

    function deletePost(id) {
      let posts = JSON.parse(localStorage.getItem('posts')) || [];
      posts = posts.filter(p => p.id != id);
      localStorage.setItem('posts', JSON.stringify(posts));
      loadPosts();
      loadTags();
    }

    function showPosts() {
      document.getElementById('searchInput').value = '';
      loadPosts();
    }
  </script>
</body>
</html>
